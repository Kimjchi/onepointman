{"version":3,"sources":["../../routes/drawing.js"],"names":["express","require","router","Router","db","squelb","squel","useFlavour","get","req","res","next","post","toCreate","idcreator","body","iduser","idgroup","description","lt","lg","img","query","insert","into","set","toString","one","then","row","response","iddrawing","sender","sendResponse","SUCCESS_STATUS","catch","BAD_REQUEST","status","message","console","log","e","toDelete","update","table","where","none","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,KAAKH,QAAQ,eAAR,CAAX;AACA,IAAMI,SAASJ,QAAQ,OAAR,CAAf;AACA,IAAMK,QAAQD,OAAOE,UAAP,CAAkB,UAAlB,CAAd;;AAGAL,OAAOM,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB,CAExC,CAFD;;AAIAT,OAAOU,IAAP,CAAY,gBAAZ,EAA8B,UAASH,GAAT,EAAaC,GAAb,EAAiB;AAC3C,QAAIG,WAAW;AACXC,mBAAWL,IAAIM,IAAJ,CAASC,MADT;AAEXC,iBAASR,IAAIM,IAAJ,CAASE,OAFP;AAGXC,qBAAaT,IAAIM,IAAJ,CAASG,WAHX;AAIXC,YAAIV,IAAIM,IAAJ,CAASI,EAJF;AAKXC,YAAIX,IAAIM,IAAJ,CAASK,EALF;AAMXC,aAAKZ,IAAIM,IAAJ,CAASM;AANH,KAAf;;AASA,QAAIC,QAAQhB,MAAMiB,MAAN,GACPC,IADO,CACF,kBADE,EAEPC,GAFO,CAEH,WAFG,EAEUZ,SAASC,SAFnB,EAGPW,GAHO,CAGH,SAHG,EAGQZ,SAASI,OAHjB,EAIPQ,GAJO,CAIH,aAJG,EAIYZ,SAASK,WAJrB,EAKPO,GALO,CAKH,WALG,EAKUZ,SAASM,EALnB,EAMPM,GANO,CAMH,WANG,EAMUZ,SAASO,EANnB,EAOPK,GAPO,CAOH,KAPG,EAOIZ,SAASQ,GAPb,EAQPK,QARO,EAAZ;;AAUAtB,OAAGuB,GAAH,CAAOL,KAAP,EACKM,IADL,CACU,UAACC,GAAD,EAAO;AACT,YAAIC,WAAW;AACXC,uBAAYF,IAAIE;AADL,SAAf;AAGAC,eAAOC,YAAP,CAAoBD,OAAOE,cAA3B,EAA2CJ,QAA3C,EAAqDpB,GAArD;AACH,KANL,EAOKyB,KAPL,CAOW,aAAK;AACRH,eAAOC,YAAP,CAAoBD,OAAOI,WAA3B,EAAwC,EAACC,QAAQ,MAAT,EAAgBC,SAAQ,8BAAxB,EAAxC,EAAiG5B,GAAjG;AACA6B,gBAAQC,GAAR,CAAYC,CAAZ;AACH,KAVL;AAWH,CA/BD;;AAiCA;AACAvC,OAAOU,IAAP,CAAY,eAAZ,EAA6B,UAASH,GAAT,EAAaC,GAAb,EAAiB;AAC3C,QAAIgC,WAAW;AACXX,mBAAWtB,IAAIM,IAAJ,CAASgB;AADT,KAAf;;AAIA,QAAIT,QAAQhB,MAAMqC,MAAN,GACPC,KADO,CACD,kBADC,EAEPnB,GAFO,CAEH,OAFG,EAEM,KAFN,EAGPoB,KAHO,CAGD,eAHC,EAGgBH,SAASX,SAHzB,EAIPL,QAJO,EAAZ;AAKCtB,OAAG0C,IAAH,CAAQxB,KAAR,EACKM,IADL,CACU,YAAI;AACN,YAAIE,WAAW;AACXO,oBAAS,SADE;AAEXC,qBAAQ;AAFG,SAAf;AAIAN,eAAOC,YAAP,CAAoBD,OAAOE,cAA3B,EAA2CJ,QAA3C,EAAqDpB,GAArD;AACH,KAPL,EAQKyB,KARL,CAQW,aAAG;AACNH,eAAOC,YAAP,CAAoBD,OAAOI,WAA3B,EAAwC,EAACC,QAAO,MAAR,EAAgBC,SAAQ,8BAAxB,EAAxC,EAAiG5B,GAAjG;AACA6B,gBAAQC,GAAR,CAAYC,CAAZ;AACH,KAXL;AAYH,CAtBD;;AAwBAM,OAAOC,OAAP,GAAiB9C,MAAjB","file":"drawing.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../connection');\r\nconst squelb = require('squel');\r\nconst squel = squelb.useFlavour('postgres');\r\n\r\n\r\nrouter.get('/', function(req, res, next) {\r\n\r\n});\r\n\r\nrouter.post('/createdrawing', function(req,res){\r\n    let toCreate = {\r\n        idcreator: req.body.iduser,\r\n        idgroup: req.body.idgroup,\r\n        description: req.body.description,\r\n        lt: req.body.lt,\r\n        lg: req.body.lg,\r\n        img: req.body.img\r\n    };\r\n\r\n    let query = squel.insert()\r\n        .into('public.\"DRAWING\"')\r\n        .set('idcreator', toCreate.idcreator)\r\n        .set('idgroup', toCreate.idgroup)\r\n        .set('description', toCreate.description)\r\n        .set('drawinglt', toCreate.lt)\r\n        .set('drawinglg', toCreate.lg)\r\n        .set('img', toCreate.img)\r\n        .toString();\r\n\r\n    db.one(query)\r\n        .then((row)=>{\r\n            let response = {\r\n                iddrawing : row.iddrawing\r\n            };\r\n            sender.sendResponse(sender.SUCCESS_STATUS, response, res)\r\n        })\r\n        .catch(e => {\r\n            sender.sendResponse(sender.BAD_REQUEST, {status: 'fail',message:'Error while creating drawing'}, res);\r\n            console.log(e);\r\n        })\r\n});\r\n\r\n//Ce serait peut etre mieux de le supprimer carrément? plutôt que de le set inactif\r\nrouter.post('deletedrawing', function(req,res){\r\n   let toDelete = {\r\n       iddrawing: req.body.iddrawing\r\n   };\r\n\r\n   let query = squel.update()\r\n       .table('public.\"DRAWING\"')\r\n       .set('actif', false)\r\n       .where('iddrawing = ?', toDelete.iddrawing)\r\n       .toString();\r\n    db.none(query)\r\n        .then(()=>{\r\n            let response = {\r\n                status : 'success',\r\n                message:'Drawing deleted successfully'\r\n            };\r\n            sender.sendResponse(sender.SUCCESS_STATUS, response, res)\r\n        })\r\n        .catch(e=>{\r\n            sender.sendResponse(sender.BAD_REQUEST, {status:'fail', message:'Error while deleting drawing'}, res);\r\n            console.log(e);\r\n        })\r\n});\r\n\r\nmodule.exports = router;\r\n"]}