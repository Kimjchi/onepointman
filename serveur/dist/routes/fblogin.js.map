{"version":3,"sources":["../../routes/fblogin.js"],"names":["axios","require","express","router","Router","querystring","facebookdata","db","squelb","squel","useFlavour","SUCCESS_STATUS","REDIRECT_STATUS","NOT_FOUND_STATUS","userFriendList","_sendResponse","status","message","res","send","_getUserAccessToken","str","requestToken","redirectURI","client_id","redirect_uri","client_secret","code","get","_getAppAccessToken","apiAppRequest","requestAPI","grant_type","_inspectUserToken","inspectTokenRequest","input_token","userAccessToken","access_token","appAccessToken","_checkIfUserExists","user_id","query","select","from","where","toString","_insertNewUser","insert","into","set","req","next","console","log","facebookURI","parse","originalUrl","substring","indexOf","length","then","response","data","userFbId","existingUser","catch","error","post","module","exports"],"mappings":"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","file":"fblogin.js","sourcesContent":["const axios = require('axios');\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst querystring = require('querystring');\r\nconst facebookdata = require(\"../facebookdata\");\r\n\r\n\r\nconst db = require('../connection');\r\nconst squelb = require('squel');\r\nconst squel = squelb.useFlavour('postgres');\r\n\r\nconst SUCCESS_STATUS = 200;\r\nconst REDIRECT_STATUS = 304;\r\nconst NOT_FOUND_STATUS = 404;\r\n\r\nlet userFriendList;\r\n\r\nconst _sendResponse = (status, message, res) => {\r\n    res.status(status);\r\n    res.send(message);\r\n};\r\n\r\nconst _getUserAccessToken = (str) => {\r\n    let requestToken = {\r\n        redirectURI: 'https://graph.facebook.com/v2.11/oauth/access_token?',\r\n        client_id: '137357800216709',\r\n        redirect_uri: 'http://localhost:3000/handleauth',\r\n        client_secret: '8120bf1c2ce2729a20d024a8c491c9b5',\r\n        code: str.code\r\n    };\r\n\r\n    return axios.get(requestToken.redirectURI + 'client_id=' + requestToken.client_id + '&redirect_uri=' + requestToken.redirect_uri\r\n        + '&client_secret=' + requestToken.client_secret + '&code=' + requestToken.code)\r\n};\r\n\r\nconst _getAppAccessToken = () => {\r\n\r\n    const apiAppRequest = {\r\n        requestAPI: 'https://graph.facebook.com/oauth/access_token?',\r\n        client_id: '137357800216709',\r\n        client_secret: '8120bf1c2ce2729a20d024a8c491c9b5',\r\n        grant_type: 'client_credentials'\r\n    };\r\n\r\n    return axios.get(apiAppRequest.requestAPI + 'client_id=' + apiAppRequest.client_id + '&client_secret='\r\n        + apiAppRequest.client_secret + '&grant_type=' + apiAppRequest.grant_type)\r\n};\r\n\r\nconst _inspectUserToken = () => {\r\n    let inspectTokenRequest = {\r\n        redirectURI: 'https://graph.facebook.com/debug_token?',\r\n        input_token: facebookdata.userAccessToken,\r\n        access_token: facebookdata.appAccessToken\r\n    };\r\n\r\n    return axios.get(inspectTokenRequest.redirectURI + 'input_token=' + inspectTokenRequest.input_token + '&access_token=' + inspectTokenRequest.access_token)\r\n};\r\n\r\nconst _checkIfUserExists = (user_id) => {\r\n    return db.query(squel\r\n        .select()\r\n        .from('\"USER\"')\r\n        .where('iduser = ?', user_id)\r\n        .toString())\r\n};\r\n\r\nconst _insertNewUser = (user_id) => {\r\n    return db.query(squel\r\n        .insert()\r\n        .into('\"USER\"')\r\n        .set('iduser', user_id)\r\n        .toString())\r\n};\r\n\r\nrouter.get('/', function (req, res, next) {\r\n    console.log(\"GET /fblogin\");\r\n\r\n    let facebookURI = {\r\n        redirectURI: 'https://www.facebook.com/v2.11/dialog/oauth?',\r\n        client_id: '137357800216709',\r\n        redirect_uri: 'http://localhost:3000/handleauth'\r\n    };\r\n\r\n    _sendResponse(SUCCESS_STATUS, facebookURI, res)\r\n\r\n    console.log(\"end GET /fblogin\");\r\n});\r\n\r\nrouter.get('/handleauth', function (req, res, next) {\r\n    console.log(\"GET /fblogin/handleauth\");\r\n\r\n    let str = querystring.parse(req.originalUrl.substring(req.originalUrl.indexOf(\"?\") + 1, req.originalUrl.length));\r\n\r\n    console.log('STR VALUE :' + str.code);\r\n\r\n    _getUserAccessToken(str)\r\n        .then(response => {\r\n\r\n            facebookdata.userAccessToken = response.data.access_token;\r\n\r\n            _getAppAccessToken()\r\n                .then(response => {\r\n\r\n                    facebookdata.appAccessToken = response.data.access_token;\r\n\r\n                    _inspectUserToken()\r\n                        .then(response => {\r\n                            facebookdata.userFbId = response.data.data.user_id;\r\n\r\n                            _checkIfUserExists(facebookdata.userFbId)\r\n                                .then(existingUser => {\r\n\r\n                                    if (existingUser.length === 0) {\r\n                                        console.log('User does not exist. Creating user with facebook ID : ' + facebookdata.userFbId);\r\n\r\n                                        //TODO :insert user into DB\r\n                                        _insertNewUser(facebookdata.userFbId);\r\n\r\n                                        //TODO: Send response to client\r\n                                        _sendResponse(SUCCESS_STATUS, 'Welcome on Onepointman, man !', res);\r\n                                    } else {\r\n                                        console.log('User with ID : ' + facebookdata.userFbId + 'already exists in database');\r\n\r\n                                        //TODO: Send response to client\r\n                                        _sendResponse(SUCCESS_STATUS, 'Welcome on Onepointman, man !', res);\r\n                                    }\r\n                                })\r\n                                .catch(error => {\r\n                                    console.log(error);\r\n                                });\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n    console.log(\"end GET /fblogin/handleauth\");\r\n});\r\n\r\nrouter.post('/authAndroid', function (req, res) {\r\n\r\n    //TODO : bind parameters to facebokdata\r\n\r\n    //TODO : sendResponse to android client\r\n});\r\nmodule.exports = router;"]}