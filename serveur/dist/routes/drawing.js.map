{"version":3,"sources":["../../routes/drawing.js"],"names":["express","require","router","Router","db","squelb","squel","useFlavour","sender","get","req","res","next","post","console","log","toCreate","idcreator","body","iduser","idgroup","description","zoom","lt","lg","img","toString","query","one","then","row","response","status","iddrawing","sendResponse","SUCCESS_STATUS","catch","e","BAD_REQUEST","message","toDelete","update","table","set","where","none","module","exports"],"mappings":"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","file":"drawing.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../connection');\r\nconst squelb = require('squel');\r\nconst squel = squelb.useFlavour('postgres');\r\nconst sender = require('../sender');\r\n\r\n\r\n\r\nrouter.get('/', function(req, res, next) {\r\n\r\n});\r\n\r\nrouter.post('/createdrawing', function(req,res){\r\n    console.log(\"YOOOOOOOOOOOO\");\r\n    let toCreate = {\r\n        idcreator: req.body.iduser,\r\n        idgroup: req.body.idgroup,\r\n        description: req.body.description,\r\n        zoom: req.body.zoom,\r\n        lt: req.body.lt,\r\n        lg: req.body.lg,\r\n        img: req.body.img\r\n    };\r\n\r\n    console.log(toCreate.img.toString());\r\n    /*let query = squel.insert()\r\n        .into('public.\"DRAWING\"')\r\n        .set('idcreator', toCreate.idcreator)\r\n        .set('idgroup', toCreate.idgroup)\r\n        .set('zoom', toCreate.zoom)\r\n        .set('description', toCreate.description)\r\n        .set('drawinglt', toCreate.lt)\r\n        .set('drawinglg', toCreate.lg)\r\n        .set('img', toCreate.img)\r\n        .returning('iddrawing')\r\n        .toString();*/\r\n\r\n    let query = 'INSERT INTO public.\"DRAWING\" (idcreator, idgroup, zoom, description, drawinglt, drawinglg, img)' +\r\n        ' VALUES(' + toCreate.idcreator + ',' + toCreate.idgroup + ',' + toCreate.zoom + ',\\'' + toCreate.description + '\\',' + toCreate.lt\r\n        + ',' + toCreate.lg + ', decode(\\'' + toCreate.img + '\\', \\'base64\\')) RETURNING iddrawing';\r\n\r\n    console.log(\"query \" + query);\r\n    db.one(query)\r\n        .then((row)=>{\r\n            let response = {\r\n                status: 'success',\r\n                iddrawing : row.iddrawing\r\n            };\r\n            sender.sendResponse(sender.SUCCESS_STATUS, response, res)\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            sender.sendResponse(sender.BAD_REQUEST, {status: 'fail',message:'Error while creating drawing'}, res);\r\n        })\r\n});\r\n\r\n//Ce serait peut etre mieux de le supprimer carrément? plutôt que de le set inactif\r\nrouter.post('deletedrawing', function(req,res){\r\n   let toDelete = {\r\n       iddrawing: req.body.iddrawing\r\n   };\r\n\r\n   let query = squel.update()\r\n       .table('public.\"DRAWING\"')\r\n       .set('actif', false)\r\n       .where('iddrawing = ?', toDelete.iddrawing)\r\n       .toString();\r\n    db.none(query)\r\n        .then(()=>{\r\n            let response = {\r\n                status : 'success',\r\n                message:'Drawing deleted successfully'\r\n            };\r\n            sender.sendResponse(sender.SUCCESS_STATUS, response, res)\r\n        })\r\n        .catch(e=>{\r\n            sender.sendResponse(sender.BAD_REQUEST, {status:'fail', message:'Error while deleting drawing'}, res);\r\n            console.log(e);\r\n        })\r\n});\r\n\r\nmodule.exports = router;\r\n"]}