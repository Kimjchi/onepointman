{"version":3,"sources":["../app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","index","users","fblogin","connection","app","use","json","urlencoded","extended","static","join","__dirname","req","res","next","header","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,UAAUF,QAAQ,eAAR,CAAd;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;AACA,IAAII,eAAeJ,QAAQ,eAAR,CAAnB;AACA,IAAIK,aAAaL,QAAQ,aAAR,CAAjB;;AAEA,IAAIM,QAAQN,QAAQ,gBAAR,CAAZ;AACA,IAAIO,QAAQP,QAAQ,gBAAR,CAAZ;AACA,IAAIQ,UAAUR,QAAQ,kBAAR,CAAd;AACA,IAAIS,aAAaT,QAAQ,cAAR,CAAjB;;AAEA,IAAIU,MAAMX,SAAV;;AAEA;AACA;AACAW,IAAIC,GAAJ,CAAQR,OAAO,KAAP,CAAR;AACAO,IAAIC,GAAJ,CAAQN,WAAWO,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQN,WAAWQ,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQP,cAAR;AACAM,IAAIC,GAAJ,CAAQZ,QAAQgB,MAAR,CAAed,KAAKe,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAP,IAAIC,GAAJ,CAAS,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,yHAA3C;AACAF,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAD;AACH,CAND;;AAQAV,IAAIC,GAAJ,CAAQ,GAAR,EAAaL,KAAb;AACAI,IAAIC,GAAJ,CAAQ,QAAR,EAAkBJ,KAAlB;AACAG,IAAIC,GAAJ,CAAQ,UAAR,EAAoBH,OAApB;;AAEA;AACAE,IAAIC,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIE,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACD,CAJD;;AAMA;AACAZ,IAAIC,GAAJ,CAAQ,UAASW,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIM,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAP,MAAIM,MAAJ,CAAWE,KAAX,GAAmBT,IAAIR,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAH,MAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAL,MAAIU,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBrB,GAAjB","file":"app.js","sourcesContent":["var express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\n\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar fblogin = require('./routes/fblogin');\r\nvar connection = require('./connection');\r\n\r\nvar app = express();\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use( function(req, res, next) {\r\n    res.header('Access-Control-Allow-Origin', '*');\r\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\r\n    res.header('Access-Control-Allow-Headers', 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials, Origin');\r\n    res.header(\"Access-Control-Allow-Credentials\", \"true\");\r\n    next();\r\n});\r\n\r\napp.use('/', index);\r\napp.use('/users', users);\r\napp.use('/fblogin', fblogin);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"]}