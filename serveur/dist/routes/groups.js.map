{"version":3,"sources":["../../routes/groups.js"],"names":["express","require","router","Router","db","squelb","squel","useFlavour","get","req","res","iduser","params","groups","getUsersInGroups","any","then","tableau","toReturn","buildGroupsObject","send","status","message","catch","e","toString","getGroups","select","from","field","where","left_join","queryResult","forEach","element","index","contains","idPosition","idgroup","grelement","push","nomgroup","membres","idGroupeConcerne","grindex","prenom","nomuser","console","log","module","exports"],"mappings":"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","file":"groups.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../connection');\r\nconst squelb = require('squel');\r\nconst squel = squelb.useFlavour('postgres');\r\n\r\n//donne les groupes auxquels appartient un utilisateur + les membres du groupe\r\nrouter.get('/:iduser/', function (req, res) {\r\n    let iduser = req.params.iduser;\r\n    let groups = getUsersInGroups(iduser);\r\n    db.any(groups)\r\n        .then((tableau) => {\r\n            let toReturn = buildGroupsObject(tableau);\r\n            res.send({\r\n                status: 'success',\r\n                message: toReturn\r\n            });\r\n\r\n\r\n        })\r\n        .catch(e => {\r\n            res.send({\r\n                status: 'fail',\r\n                message: e.toString()\r\n             })\r\n        });\r\n\r\n});\r\n\r\nlet getGroups = (iduser) =>\r\n    squel.select()\r\n        .from('public.\"USER_GROUP\"', 'ugr')\r\n        .field('ugr.idgroup')\r\n        .field('gr.nom')\r\n        .where('ugr.iduser = ?', iduser)\r\n        .left_join('public.\"GROUP\"','gr','ugr.idgroup = gr.idgroup')\r\n        ;\r\n\r\nlet getUsersInGroups = (iduser) =>\r\n    squel.select()\r\n        .from(getGroups(iduser), 'listgroups')\r\n        .left_join('public.\"USER_GROUP\"', 'ugr', 'ugr.idgroup = listgroups.idgroup')\r\n        .left_join('public.\"USER\"', 'usr', 'usr.iduser = ugr.iduser')\r\n        .field('usr.prenom')\r\n        .field('usr.nom', 'nomuser')\r\n        .field('usr.iduser')\r\n        .field('listgroups.nom', 'nomgroup')\r\n        .field('ugr.idgroup')\r\n        .toString();\r\n\r\nfunction buildGroupsObject(queryResult){\r\n    var groups = [];\r\n    queryResult.forEach((element, index) => {\r\n        // le resultat de la requete donne un tableau de {prenom, nomuser, iduser, nomgroup, idgroup}\r\n        let contains = false;\r\n        let idPosition;\r\n        // si l'id du groupe n'existe pas encore dans le tableau, on le push et on crée un ligne pour le groupe\r\n        groups.forEach(grelement => {\r\n            if(element.idgroup === grelement.idgroup){\r\n                contains = true;\r\n                idPosition = index;\r\n            }\r\n        });\r\n        if(!contains){\r\n            groups.push({idgroup: element.idgroup, nomgroup: element.nomgroup, membres:[] })\r\n        }\r\n    });\r\n    //une fois le tableau des groupes créé, on push les membres dans groups[idGroupConcerné].membres\r\n    queryResult.forEach((element) => {\r\n        let idGroupeConcerne;\r\n       //on get la position dans groups du groupe concerné pour l'user (element)\r\n        groups.forEach((grelement, grindex) => {\r\n            if(grelement.idgroup === element.idgroup){\r\n                idGroupeConcerne = grindex;\r\n                groups[idGroupeConcerne].membres.push({iduser: element.iduser, prenom: element.prenom, nomuser:element.nomuser});\r\n            }\r\n            console.log(groups[grindex].membres);\r\n        })\r\n    });\r\n    return groups;\r\n\r\n}\r\n\r\n// les infos d'un groupe en particulier\r\nrouter.get('/:iduser/:idgroup', function(req,res){\r\n   let iduser = req.params.iduser;\r\n   let idgroup = req.params.idgroup;\r\n\r\n    console.log(iduser+\" \" +idgroup);\r\n});\r\n\r\nmodule.exports = router;"]}